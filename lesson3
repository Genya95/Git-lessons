package ru.geekbrains.lesson3;

import java.util.Arrays;

public class lesson3 {

    public static void main(String[] args) {
        invertNumber();
        changeNumber();
        x2Method();
        diagonalElements();
        getMassive(10, 5);
        
    }

    //
    // Задать целочисленный массив, состоящий из элементов 0 и 1.
    // Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ].
    // С помощью цикла и условия заменить 0 на 1, 1 на 0//
    public static void invertNumber() {
        int[] number = {0, 0, 1, 1, 1, 0, 0, 1};
        for (int i = 0; i < number.length; i++) {
            if (number[i] == 1) {
                number[i] = 0;
            } else number[i] = 1;
        }
        System.out.println(Arrays.toString(number));
    }

    //Задать пустой целочисленный массив длиной 100.
    // С помощью цикла заполнить его значениями 1 2 3 4 5 6 7 8 … 100//
    public static void changeNumber() {
        int[] hundred = new int[100];
        for (int i = 0; i < 100; i++) {
            hundred[i] = (i + 1);
        }
        System.out.println(Arrays.toString(hundred));
    }

    //Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ] пройти по нему циклом,
    // и числа меньшие 6 умножить на 2;//
    public static void x2Method() {
        int[] massive = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        for (int i = 0; i < massive.length; i++) {
            if (massive[i] < 6) {
                massive[i] = (massive[i] *= 2);
            } else {
                massive[i] = massive[i];
            }
        }
        System.out.println(Arrays.toString(massive));
    }

    // Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое),
    // и с помощью цикла(-ов) заполнить его диагональные элементы единицами (можно только одну
    // из диагоналей, если обе сложно). Определить элементы одной из диагоналей можно
    // по следующему принципу: индексы таких элементов равны, то есть [0][0], [1][1], [2][2], …, [n][n];//
    public static void diagonalElements() {
        int[][] table = new int[10][10];
        for (int i = 0; i < table.length; i++) {
            for (int j = 0; j < table[i].length; j++) {
                if (i == j) {
                    table[i][j] = 1;
                }
                System.out.print(table[i][j] + "\t");
            }
            System.out.println();
        }
    }

    //Написать метод, принимающий на вход два аргумента: len и initialValue,
    // и возвращающий одномерный массив типа int длиной len,
    // каждая ячейка которого равна initialValue;//
    public static void getMassive(int len, int initialValue) {
        int[] mass = new int[len];
        for (int i = 0; i < len; i++) {
            mass[i] = initialValue;
        }
        System.out.println(Arrays.toString(mass));
    }
}